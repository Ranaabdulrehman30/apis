name: Azure Functions CodeQL Scan

on:
  push:
    tags:
      - '*'
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write  # Added for code scanning

env:
  PYTHON_VERSION: '3.11'
  DEPLOYMENT_BRANCH: 'main'

jobs:
  code-scan:
    name: CodeQL Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        id: codeql-analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
          output: sarif-results

      # Export the CodeQL results to a report file
      - name: Generate CodeQL Report
        run: |
          mkdir -p codeql-reports
          DATE=$(date +"%Y-%m-%d")
          
          # Copy the SARIF results
          if [ -d "sarif-results" ] && [ "$(find sarif-results -name '*.sarif' 2>/dev/null)" ]; then
            cp sarif-results/*.sarif codeql-reports/codeql-results-$DATE.sarif
            echo "SARIF file copied to codeql-reports/codeql-results-$DATE.sarif"
            
            # Create a simple text summary
            echo "CodeQL Analysis Summary for $GITHUB_REPOSITORY - $DATE" > codeql-reports/summary-$DATE.txt
            echo "========================================================" >> codeql-reports/summary-$DATE.txt
            echo "" >> codeql-reports/summary-$DATE.txt
            echo "Scan completed on: $(date)" >> codeql-reports/summary-$DATE.txt
            echo "Results are available in the SARIF file." >> codeql-reports/summary-$DATE.txt
            echo "" >> codeql-reports/summary-$DATE.txt
            echo "View detailed results in GitHub's Security tab or download the SARIF file." >> codeql-reports/summary-$DATE.txt
          else
            echo "No SARIF files found to generate summary" > codeql-reports/summary-$DATE.txt
          fi
          
          # List the generated files
          echo "Generated report files:"
          ls -la codeql-reports/

      # Store CodeQL reports as GitHub artifacts
      - name: Upload Reports
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: codeql-security-reports-${{ github.sha }}
          path: codeql-reports/
          retention-days: 90

      # Store the raw CodeQL database as GitHub artifact
      - name: Upload Database
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: codeql-database-${{ github.sha }}
          path: /home/runner/work/_temp/codeql_databases
          retention-days: 90

  deploy:
    name: Deploy Azure Function
    needs: code-scan  # Wait for code scanning to complete before deploying
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - function_name: "uat1-deleteapi"
            path: "delete-api"
            tag_identifier: "delete-api"
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Extract tag info
        id: tag-info
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          FUNCTION_ID=$(echo $TAG_NAME | cut -d'-' -f2-)
          echo "function_id=$FUNCTION_ID" >> $GITHUB_OUTPUT
          echo "Extracted tag name: $TAG_NAME"
          echo "Extracted function ID: $FUNCTION_ID"

      - name: Verify tag is on main branch
        run: |
          git fetch origin main
          if git branch -r --contains ${{ github.ref }} | grep -q "origin/main"; then
            echo "Tag is on main branch"
          else
            echo "Tag must be on the main branch"
            exit 1
          fi

      - name: Setup Python
        if: matrix.tag_identifier == steps.tag-info.outputs.function_id
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        if: matrix.tag_identifier == steps.tag-info.outputs.function_id
        run: |
          if [ -f "${{ matrix.path }}/requirements.txt" ]; then
            pip install -r ${{ matrix.path }}/requirements.txt
          fi

      - name: Login to Azure
        if: matrix.tag_identifier == steps.tag-info.outputs.function_id
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Function
        if: matrix.tag_identifier == steps.tag-info.outputs.function_id
        uses: azure/functions-action@v1
        with:
          app-name: ${{ matrix.function_name }}
          package: ${{ matrix.path }}